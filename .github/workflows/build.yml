name: SensorApp - Build, Unit & Integration Tests


on:
  pull_request:         
  push:
    branches: [main]    


env:
  DOTNET_VERSION: 8.0.x
  SLN_PATH: ${{ vars.SLN_PATH }}
  UNIT_TEST_PROJ: ${{ vars.UNIT_TEST_PROJ }}
  INTEGRATION_TEST_PROJ: ${{ vars.INTEGRATION_TEST_PROJ }}

jobs:
  build:
    runs-on: windows-latest           
    environment: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install MAUI workloads (Android + Windows)
      run: dotnet workload install maui-android maui-windows

    - name: Restore
      run: dotnet restore ${{ vars.SLN_PATH }}

    - name: Build Android
      run: dotnet build SensorApp/SensorApp.Maui/SensorApp.Maui.csproj `
            -c Release -f net8.0-android 

    - name: Build Windows
      run: dotnet build SensorApp/SensorApp.Maui/SensorApp.Maui.csproj `
            -c Release -f net8.0-windows10.0.19041.0 `
            -p:RuntimeIdentifier=win10-x64

    - name: Build solution
      run: dotnet build ${{ vars.SLN_PATH }} --configuration Release 


  unit-tests:
    runs-on: windows-latest
    needs: build                    

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-output

    - name: Run unit tests
      run: dotnet test ${{ vars.UNIT_TEST_PROJ }} --configuration Release --no-build --logger trx


  integration-tests:
    runs-on: windows-latest
    environment: integration-tests
    needs: build

    env:
      ASPNETCORE_ENVIRONMENT: Testing
      JwtSettings__Key: ${{ secrets.JWT_TEST_KEY }}


    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-output

    - name: Run integration tests
      run: dotnet test ${{ vars.INTEGRATION_TEST_PROJ }} --configuration Release --no-build --logger trx
